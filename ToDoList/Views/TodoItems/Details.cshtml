@model ToDoList.Models.TodoItem

@{
    ViewData["Title"] = "Szczegóły zadania";
}

<div class="row justify-content-center animate__animated animate__fadeIn">
    <div class="col-lg-8">
        <div class="card shadow-sm border-0">
            <div class="card-header bg-white d-flex align-items-center">
                <i class="fas fa-info-circle text-info me-2 fs-4"></i>
                <h1 class="h3 mb-0 text-info">Szczegóły zadania</h1>
            </div>
            <div class="card-body">
                <div class="row mb-4">
                    <div class="col-md-12">
                        <div class="mb-4">
                            <h2 class="h4 text-primary">
                                <i class="fas fa-heading me-1"></i> Tytuł
                            </h2>
                            <p class="lead">@Model.Title</p>
                        </div>
                        
                        <div class="mb-4">
                            <h2 class="h4 text-primary">
                                <i class="fas fa-align-left me-1"></i> Opis
                            </h2>
                            <p class="border-start ps-3 border-3 border-primary">
                                @if (string.IsNullOrEmpty(Model.Description))
                                {
                                    <span class="text-muted">Brak opisu</span>
                                }
                                else
                                {
                                    @Model.Description
                                }
                            </p>
                        </div>
                        
                        <div class="row g-4 mb-4">
                            <div class="col-md-6">
                                <div class="card h-100 shadow-sm">
                                    <div class="card-body">
                                        <h2 class="h5 card-title mb-3 text-primary">
                                            <i class="fas fa-info me-1"></i> Informacje podstawowe
                                        </h2>
                                        <ul class="list-group list-group-flush">
                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                <span>Status:</span>
                                                @if (Model.IsCompleted)
                                                {
                                                    <span class="badge bg-success rounded-pill">Ukończone</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-primary rounded-pill">Aktywne</span>
                                                }
                                            </li>
                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                <span>Priorytet:</span>
                                                @switch (Model.Priority)
                                                {
                                                    case 1:
                                                        <span class="badge bg-success rounded-pill">Niski</span>
                                                        break;
                                                    case 2:
                                                        <span class="badge bg-warning text-dark rounded-pill">Średni</span>
                                                        break;
                                                    case 3:
                                                        <span class="badge bg-danger rounded-pill">Wysoki</span>
                                                        break;
                                                    default:
                                                        <span class="badge bg-light text-dark rounded-pill">Brak</span>
                                                        break;
                                                }
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="col-md-6">
                                <div class="card h-100 shadow-sm">
                                    <div class="card-body">
                                        <h2 class="h5 card-title mb-3 text-primary">
                                            <i class="fas fa-calendar me-1"></i> Daty
                                        </h2>
                                        <ul class="list-group list-group-flush">
                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                <span>Data utworzenia:</span>
                                                <span>@Model.CreatedAt.ToString("g")</span>
                                            </li>
                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                <span>Termin wykonania:</span>
                                                @if (Model.DueDate.HasValue)
                                                {
                                                    <span>@Model.DueDate.Value.ToShortDateString()</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Brak terminu</span>
                                                }
                                            </li>
                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                <span>Data ukończenia:</span>
                                                @if (Model.CompletedAt.HasValue)
                                                {
                                                    <span>@Model.CompletedAt.Value.ToString("g")</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Zadanie nieukończone</span>
                                                }
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <hr class="my-4">
                
                <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                    <a asp-action="Index" class="btn btn-light btn-lg me-md-2">
                        <i class="fas fa-arrow-left me-1"></i> Powrót do listy
                    </a>
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary btn-lg me-md-2">
                        <i class="fas fa-edit me-1"></i> Edytuj
                    </a>
                    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger btn-lg">
                        <i class="fas fa-trash me-1"></i> Usuń
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const elements = document.querySelectorAll('.card, .btn, .list-group-item');
            elements.forEach((element, index) => {
                setTimeout(() => {
                    element.classList.add('animate__animated', 'animate__fadeIn');
                }, index * 100);
            });
        });
    </script>
}
